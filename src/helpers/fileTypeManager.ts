export const getLanguage = (file: string): string | undefined => {
    const extension = file.split('.').pop()?.toLowerCase();
    if (!extension) return 'plaintext';

    switch (extension) {
        case '1c': return 'oneC';
        case 'abnf': return 'abnf';
        case 'log': return 'accesslog';
        case 'as': return 'actionscript';
        case 'ada': return 'ada';
        case 'ags': return 'angelscript';
        case 'apacheconf': return 'apache';
        case 'applescript': return 'applescript';
        case 'arcade': return 'arcade';
        case 'ino': return 'arduino';
        case 'arm': return 'armasm';
        case 'adoc': return 'asciidoc';
        case 'aj': return 'aspectj';
        case 'ahk': return 'autohotkey';
        case 'au3': return 'autoit';
        case 'asm': return 'avrasm';
        case 'awk': return 'awk';
        case 'ax': return 'axapta';
        case 'sh':
        case 'bash': return 'bash';
        case 'bas': return 'basic';
        case 'bnf': return 'bnf';
        case 'bf': return 'brainfuck';
        case 'c': return 'c';
        case 'cal': return 'cal';
        case 'capnp': return 'capnproto';
        case 'ceylon': return 'ceylon';
        case 'icl': return 'clean';
        case 'clj': return 'clojure';
        case 'cmake': return 'cmake';
        case 'coffee': return 'coffeescript';
        case 'cos': return 'cos';
        case 'cpp':
        case 'h': return 'cpp';
        case 'crm': return 'crmsh';
        case 'cr': return 'crystal';
        case 'cs': return 'csharp';
        case 'sln': return 'csharp';
        case 'slnx': return 'csharp';
        case 'csp': return 'csp';
        case 'css': return 'css';
        case 'd': return 'd';
        case 'dart': return 'dart';
        case 'pas': return 'delphi';
        case 'diff': return 'diff';
        case 'django': return 'django';
        case 'bind': return 'dns';
        case 'dockerfile': return 'dockerfile';
        case 'bat': return 'dos';
        case 'dsconfig': return 'dsconfig';
        case 'dts': return 'dts';
        case 'dust': return 'dust';
        case 'ebnf': return 'ebnf';
        case 'ex':
        case 'exs': return 'elixir';
        case 'elm': return 'elm';
        case 'erb': return 'erb';
        case 'erl': return 'erlang';
        case 'xlsx': return 'excel';
        case 'fix': return 'fix';
        case 'flix': return 'flix';
        case 'f90':
        case 'f95': return 'fortran';
        case 'fs': return 'fsharp';
        case 'gms': return 'gams';
        case 'gss': return 'gauss';
        case 'gcode': return 'gcode';
        case 'feature': return 'gherkin';
        case 'glsl': return 'glsl';
        case 'gml': return 'gml';
        case 'go': return 'go';
        case 'golo': return 'golo';
        case 'gradle': return 'gradle';
        case 'groovy': return 'groovy';
        case 'haml': return 'haml';
        case 'hbs': return 'handlebars';
        case 'hs': return 'haskell';
        case 'hx': return 'haxe';
        case 'hsp': return 'hsp';
        case 'html': return 'htmlbars';
        case 'http': return 'http';
        case 'hy': return 'hy';
        case 'i7': return 'inform7';
        case 'ini': return 'ini';
        case 'irpf90': return 'irpf90';
        case 'isbl': return 'isbl';
        case 'java': return 'java';
        case 'js': return 'javascript';
        case 'jbcli': return 'jbossCli';
        case 'json': return 'json';
        case 'jl': return 'julia';
        case 'kt': return 'kotlin';
        case 'lasso': return 'lasso';
        case 'tex': return 'latex';
        case 'ldif': return 'ldif';
        case 'leaf': return 'leaf';
        case 'less': return 'less';
        case 'lisp': return 'lisp';
        case 'lsc': return 'livecodeserver';
        case 'ls': return 'livescript';
        case 'll': return 'llvm';
        case 'lsl': return 'lsl';
        case 'lua': return 'lua';
        case 'mak': return 'makefile';
        case 'md': return 'markdown';
        case 'matlab': return 'matlab';
        case 'max': return 'maxima';
        case 'mel': return 'mel';
        case 'merc': return 'mercury';
        case 'mips': return 'mipsasm';
        case 'mizar': return 'mizar';
        case 'mojolicious': return 'mojolicious';
        case 'monkey': return 'monkey';
        case 'moon': return 'moonscript';
        case 'n1ql': return 'n1ql';
        case 'nginxconf': return 'nginx';
        case 'nim': return 'nim';
        case 'nix': return 'nix';
        case 'nsi': return 'nsis';
        case 'm': return 'objectivec';
        case 'ml': return 'ocaml';
        case 'scad': return 'openscad';
        case 'oxygene': return 'oxygene';
        case 'p3': return 'parser3';
        case 'pl': return 'perl';
        case 'pf': return 'pf';
        case 'pgsql': return 'pgsql';
        case 'php': return 'php';
        case 'txt': return 'plaintext';
        case 'pony': return 'pony';
        case 'ps1': return 'powershell';
        case 'pde': return 'processing';
        case 'pro': return 'profile';
        case 'prolog': return 'prolog';
        case 'properties': return 'properties';
        case 'proto': return 'protobuf';
        case 'pp': return 'puppet';
        case 'pb': return 'purebasic';
        case 'py': return 'python';
        case 'q': return 'q';
        case 'qml': return 'qml';
        case 'r': return 'r';
        case 're': return 'reasonml';
        case 'rib': return 'rib';
        case 'graph': return 'roboconf';
        case 'ros': return 'routeros';
        case 'rsl': return 'rsl';
        case 'rb': return 'ruby';
        case 'rules': return 'ruleslanguage';
        case 'rs': return 'rust';
        case 'sas': return 'sas';
        case 'scala': return 'scala';
        case 'scm': return 'scheme';
        case 'sci': return 'scilab';
        case 'scss': return 'scss';
        case 'shell': return 'shell';
        case 'smali': return 'smali';
        case 'st': return 'smalltalk';
        case 'sml': return 'sml';
        case 'sqf': return 'sqf';
        case 'sql': return 'sql';
        case 'stan': return 'stan';
        case 'do': return 'stata';
        case 'stp': return 'step21';
        case 'styl': return 'stylus';
        case 'subunit': return 'subunit';
        case 'swift': return 'swift';
        case 'tag': return 'taggerscript';
        case 'tap': return 'tap';
        case 'tcl': return 'tcl';
        case 'thrift': return 'thrift';
        case 'tp': return 'tp';
        case 'twig': return 'twig';
        case 'ts': return 'typescript';
        case 'vala': return 'vala';
        case 'vb': return 'vbnet';
        case 'vbs': return 'vbscript';
        case 'v': return 'verilog';
        case 'vhd': return 'vhdl';
        case 'vim': return 'vim';
        case 'x86asm': return 'x86asm';
        case 'xl': return 'xl';
        case 'xml': return 'xml';
        case 'xq': return 'xquery';
        case 'yml':
        case 'yaml': return 'yaml';
        case 'zephir': return 'zephir';
        case 'tsx': return 'typescript';
        case 'jsx': return 'javascript';
        default: return 'plaintext';
    }
}
